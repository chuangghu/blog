<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/blog/2025/04/22/%E8%8B%A5%E4%BE%9D%E6%A1%86%E6%9E%B6%EF%BC%88%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E7%89%88%EF%BC%89/"/>
    <url>/blog/2025/04/22/%E8%8B%A5%E4%BE%9D%E6%A1%86%E6%9E%B6%EF%BC%88%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E7%89%88%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="若依框架（前后端分离版）"><a href="#若依框架（前后端分离版）" class="headerlink" title="若依框架（前后端分离版）"></a>若依框架（前后端分离版）</h1><h2 id="1-1什么是若依"><a href="#1-1什么是若依" class="headerlink" title="1.1什么是若依"></a>1.1什么是若依</h2><p>开源项目拿来做二次开发，比较主流的项目</p><p>主要是做数据和权限系统，大体上是做权限管理系统，数据管理系统</p><h2 id="1-2学习开源项目的目标"><a href="#1-2学习开源项目的目标" class="headerlink" title="1.2学习开源项目的目标"></a>1.2学习开源项目的目标</h2><p>1.用，减少自己的工作</p><p>2.学习</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/blog/2025/04/20/1.%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE%E7%9B%AE%E5%BD%95/"/>
    <url>/blog/2025/04/20/1.%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE%E7%9B%AE%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h1 id="1-创建项目目录"><a href="#1-创建项目目录" class="headerlink" title="1.创建项目目录"></a>1.创建项目目录</h1><p><img src="C:\Users\chuangu\AppData\Roaming\Typora\typora-user-images\image-20250305175653304.png" alt="image-20250305175653304"></p><p><img src="C:\Users\chuangu\AppData\Roaming\Typora\typora-user-images\image-20250308215928054.png" alt="image-20250308215928054">创建static目录把css，js，piugins和imgs，目录</p><p>智能门禁系统的数据库设计需要考虑存储用户信息、访问记录、权限管理等多个方面。以下是一个基本的数据库设计方案，包括表名和字段。</p><h1 id="2-数据库名称"><a href="#2-数据库名称" class="headerlink" title="2.数据库名称"></a>2.数据库名称</h1><p>我们可以将数据库命名为<code>access_control_system</code>。</p><h3 id="表结构设计"><a href="#表结构设计" class="headerlink" title="表结构设计"></a>表结构设计</h3><h4 id="1-Users-用户表"><a href="#1-Users-用户表" class="headerlink" title="1. Users (用户表)"></a>1. Users (用户表)</h4><p>存储所有用户的信息。</p><ul><li><code>id</code>: 用户ID (主键, 自增)</li><li><code>username</code>: 用户名 (唯一, 不为空)</li><li><code>password_hash</code>: 密码哈希 (不为空)</li><li><code>first_name</code>: 名字</li><li><code>last_name</code>: 姓氏</li><li><code>email</code>: 邮箱 (唯一, 可选)</li><li><code>phone_number</code>: 手机号码 (可选)</li><li><code>created_at</code>: 创建时间 (默认当前时间)</li><li><code>updated_at</code>: 更新时间 (默认当前时间)</li></ul><h4 id="2-AccessRecords-访问记录表"><a href="#2-AccessRecords-访问记录表" class="headerlink" title="2. AccessRecords (访问记录表)"></a>2. AccessRecords (访问记录表)</h4><p>存储用户的访问记录。</p><ul><li><code>id</code>: 记录ID (主键, 自增)</li><li><code>user_id</code>: 用户ID (外键, 引用Users表的id)</li><li><code>access_time</code>: 访问时间 (默认当前时间)</li><li><code>access_type</code>: 访问类型 (例如: 进入, 离开)</li><li><code>status</code>: 状态 (例如: 成功, 失败)</li></ul><h4 id="3-Doors-门表"><a href="#3-Doors-门表" class="headerlink" title="3. Doors (门表)"></a>3. Doors (门表)</h4><p>存储门的信息。</p><ul><li><code>id</code>: 门ID (主键, 自增)</li><li><code>name</code>: 门名称 (唯一, 不为空)</li><li><code>location</code>: 位置描述</li><li><code>created_at</code>: 创建时间 (默认当前时间)</li><li><code>updated_at</code>: 更新时间 (默认当前时间)</li></ul><h4 id="4-DoorAccessPermissions-门访问权限表"><a href="#4-DoorAccessPermissions-门访问权限表" class="headerlink" title="4. DoorAccessPermissions (门访问权限表)"></a>4. DoorAccessPermissions (门访问权限表)</h4><p>存储用户对特定门的访问权限。</p><ul><li><code>id</code>: 权限ID (主键, 自增)</li><li><code>user_id</code>: 用户ID (外键, 引用Users表的id)</li><li><code>door_id</code>: 门ID (外键, 引用Doors表的id)</li><li><code>permission_level</code>: 权限级别 (例如: 允许进入, 拒绝进入)</li><li><code>created_at</code>: 创建时间 (默认当前时间)</li><li><code>updated_at</code>: 更新时间 (默认当前时间)</li></ul><h3 id="SQL-创建语句"><a href="#SQL-创建语句" class="headerlink" title="SQL 创建语句"></a>SQL 创建语句</h3><p>以下是创建上述表结构的SQL语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> DATABASE access_control_system;<br><br>USE access_control_system;<br><br><span class="hljs-keyword">CREATE TABLE</span> Users (<br>    id <span class="hljs-type">INT</span> AUTO_INCREMENT <span class="hljs-keyword">PRIMARY KEY</span>,<br>    username <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT NULL</span> <span class="hljs-keyword">UNIQUE</span>,<br>    password_hash <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT NULL</span>,<br>    first_name <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>),<br>    last_name <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>),<br>    email <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">UNIQUE</span>,<br>    phone_number <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">20</span>),<br>    created_at <span class="hljs-type">TIMESTAMP</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span>,<br>    updated_at <span class="hljs-type">TIMESTAMP</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> <span class="hljs-keyword">ON</span> <span class="hljs-keyword">UPDATE</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span><br>);<br><br><span class="hljs-keyword">CREATE TABLE</span> Doors (<br>    id <span class="hljs-type">INT</span> AUTO_INCREMENT <span class="hljs-keyword">PRIMARY KEY</span>,<br>    name <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT NULL</span> <span class="hljs-keyword">UNIQUE</span>,<br>    location TEXT,<br>    created_at <span class="hljs-type">TIMESTAMP</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span>,<br>    updated_at <span class="hljs-type">TIMESTAMP</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> <span class="hljs-keyword">ON</span> <span class="hljs-keyword">UPDATE</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span><br>);<br><br><span class="hljs-keyword">CREATE TABLE</span> AccessRecords (<br>    id <span class="hljs-type">INT</span> AUTO_INCREMENT <span class="hljs-keyword">PRIMARY KEY</span>,<br>    user_id <span class="hljs-type">INT</span> <span class="hljs-keyword">NOT NULL</span>,<br>    door_id <span class="hljs-type">INT</span> <span class="hljs-keyword">NOT NULL</span>,<br>    access_time <span class="hljs-type">TIMESTAMP</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span>,<br>    access_type ENUM(<span class="hljs-string">&#x27;enter&#x27;</span>, <span class="hljs-string">&#x27;exit&#x27;</span>) <span class="hljs-keyword">NOT NULL</span>,<br>    status ENUM(<span class="hljs-string">&#x27;success&#x27;</span>, <span class="hljs-string">&#x27;failure&#x27;</span>) <span class="hljs-keyword">NOT NULL</span>,<br>    <span class="hljs-keyword">FOREIGN KEY</span> (user_id) <span class="hljs-keyword">REFERENCES</span> Users(id),<br>    <span class="hljs-keyword">FOREIGN KEY</span> (door_id) <span class="hljs-keyword">REFERENCES</span> Doors(id)<br>);<br><br><span class="hljs-keyword">CREATE TABLE</span> DoorAccessPermissions (<br>    id <span class="hljs-type">INT</span> AUTO_INCREMENT <span class="hljs-keyword">PRIMARY KEY</span>,<br>    user_id <span class="hljs-type">INT</span> <span class="hljs-keyword">NOT NULL</span>,<br>    door_id <span class="hljs-type">INT</span> <span class="hljs-keyword">NOT NULL</span>,<br>    permission_level ENUM(<span class="hljs-string">&#x27;allow&#x27;</span>, <span class="hljs-string">&#x27;deny&#x27;</span>) <span class="hljs-keyword">NOT NULL</span>,<br>    created_at <span class="hljs-type">TIMESTAMP</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span>,<br>    updated_at <span class="hljs-type">TIMESTAMP</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> <span class="hljs-keyword">ON</span> <span class="hljs-keyword">UPDATE</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span>,<br>    <span class="hljs-keyword">FOREIGN KEY</span> (user_id) <span class="hljs-keyword">REFERENCES</span> Users(id),<br>    <span class="hljs-keyword">FOREIGN KEY</span> (door_id) <span class="hljs-keyword">REFERENCES</span> Doors(id)<br>);<br></code></pre></td></tr></table></figure><p>这个设计方案涵盖了智能门禁系统的基本需求。根据具体业务需求，您可能还需要添加更多的表或字段。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
